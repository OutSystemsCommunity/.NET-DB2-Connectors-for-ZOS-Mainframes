/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Data.Common;
using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.ExecutionService;

namespace SampleDatabaseProvider.Execution {

    /// <summary>
    ///Base implementation of a database service that handles the execution of statements made while connected to a database.
    /// </summary>
    public class ExecutionService : BaseExecutionService {

        /// <summary>
        /// Initializes a new instance of the <see cref="ExecutionService"/> class.
        /// </summary>
        /// <param name="databaseServices">The database services to be used with this execution service.</param>
        public ExecutionService(IDatabaseServices databaseServices) : base(databaseServices) { }

        /// <summary>
        /// Gets the prefix used to qualify command parameters (e.g. @)
        /// </summary>
        public override string ParameterPrefix {
            get { throw new NotImplementedException(); }
        }

        /// <summary>
        /// Checks if an exception was raised due to a connection error.
        /// </summary>
        /// <param name="e">Exception raised.</param>
        /// <returns>
        /// True if the exception was due to a connection problem, False otherwise.
        /// </returns>
        public override bool IsConnectionException(DbException e) {
            throw new NotImplementedException();
        }
    }
}
