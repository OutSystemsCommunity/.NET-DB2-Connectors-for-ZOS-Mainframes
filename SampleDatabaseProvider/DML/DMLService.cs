/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;
using OutSystems.HubEdition.Extensibility.Data.DMLService;

namespace SampleDatabaseProvider.DML {

    /// <summary>
    /// Defines a contract for generating SQL fragments to interact with a database.
    /// </summary>
    public class DMLService : BaseDMLService {

        private readonly IDMLQueries _queries;
        private readonly IDMLIdentifiers _identifiers;
        private readonly IDMLOperators _operators;
        private readonly IDMLFunctions _functions;
        private readonly IDMLAggregateFunctions _aggregateFunctions;
        private readonly IDMLDefaultValues _defaultValues;

        /// <summary>
        /// Initializes a new instance of the <see cref="DMLService"/> class.
        /// </summary>
        /// <param name="databaseServices">The database services.</param>
        public DMLService(IDatabaseServices databaseServices)
            : base(databaseServices) {
            _queries = new DMLQueries(this);
            _identifiers = new DMLIdentifiers(this);
            _operators = new DMLOperators(this);
            _functions = new DMLFunctions(this);
            _aggregateFunctions = new DMLAggregateFunctions(this);
            _defaultValues = new DMLDefaultValues(this);
        }

        /// <summary>
        /// Gets an object that generates the SQL fragments required to perform entity actions.
        /// </summary>
        /// <param name="tableSourceInfo">Information about the entity's underlying table source</param>
        /// <returns></returns>
        public override IDMLEntityActions GetEntityActions(ITableSourceInfo tableSourceInfo){
            return new DMLEntityActions(this, tableSourceInfo);
        }

        /// <summary>
        /// Gets an object that generates the SQL fragments required to perform specific queries (e.g. count query).
        /// </summary>
        public override IDMLQueries Queries { get { return _queries; } }

        /// <summary>
        /// Gets an object that generates and manipulates SQL identifiers.
        /// </summary>
        public override IDMLIdentifiers Identifiers { get { return _identifiers; } }

        /// <summary>
        /// Gets an object that generates the SQL operators required to execute simple queries.
        /// </summary>
        public override IDMLOperators Operators { get { return _operators; } }

        /// <summary>
        /// Gets an object that generates the SQL functions required to execute simple queries
        /// </summary>
        public override IDMLFunctions Functions { get { return _functions; } }

        /// <summary>
        /// Gets an object that generates the SQL aggregate functions required to execute simple queries
        /// </summary>
        public override IDMLAggregateFunctions AggregateFunctions { get { return _aggregateFunctions; } }

        /// <summary>
        /// Gets an object that generates the SQL default values for each database type.
        /// </summary>
        public override IDMLDefaultValues DefaultValues { get { return _defaultValues; } }
    }
}
