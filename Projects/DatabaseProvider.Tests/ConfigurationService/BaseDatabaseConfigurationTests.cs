/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using NUnit.Framework;
using NUnitExtension.OutSystems.Framework;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;
using System;
using OutSystems.ServerTests.DatabaseProvider.Framework;

namespace OutSystems.ServerTests.DatabaseProvider.ConfigurationService {

    [DashboardTestFixture(DashboardTest.DashboardTestKind)]
    public class BaseDatabaseConfigurationTests : DashboardTest {

        public class MockDatabaseConfiguration : BaseDatabaseConfiguration {

            public override HubEdition.Extensibility.Data.IDatabaseProvider DatabaseProvider {
                get { throw new NotImplementedException(); }
            }

            public override string DatabaseIdentifier {
                get {
                    throw new NotImplementedException();
                }
            }

            protected override string AssembleBasicConnectionString() {
                return "jdbc://fakeconnectionstring";
            }

            protected override string AssembleAdvancedConnectionString() {
                throw new NotImplementedException();
            }

            private AdvancedConfiguration advancedConfiguration = new AdvancedConfiguration(null, null, null);

            public override AdvancedConfiguration AdvancedConfiguration {
                get {
                    return advancedConfiguration;
                }
                set {
                    advancedConfiguration = value;
                }
            }

            public override IRuntimeDatabaseConfiguration RuntimeDatabaseConfiguration {
                get { throw new NotImplementedException(); }
            }
        }

        [Test(Description = "Checks if the Connection String Override property overrides the original connection string value")]
        [TestDetails(CreatedBy = "rcn", Feature = "Database Abstraction Layer", TestIssue = "613292")]
        public void CheckIfConnectionStringOverrideOverridesConnectionString() {

            var mockConfig = new MockDatabaseConfiguration();

            Assert.AreEqual("jdbc://fakeconnectionstring", mockConfig.ConnectionString);

            mockConfig.ConnectionStringOverride = "overriding";

            Assert.AreEqual("overriding", mockConfig.ConnectionString, "Didn't override existing connection string.");
        }
    }
}
